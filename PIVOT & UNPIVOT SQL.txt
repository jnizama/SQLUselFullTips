- Se recomienda usar expresión de tabla antes de usar el operador PIVOT
- Si no se usa expresión de tabla, el factor de eliminación será por la clave primaria de la tabla
- La lista IN ([],[],...) debe ser valores fijos, si no se sabe, usar SQL Dinámico.
- La expresión de agregado de PIVOT no puede ser con COUNT(*), sino usar COUNT(Column), se puede crear una columna ficticia usando una constante como en 1 como agg_col y entonces pivotear como COUNT(agg_col)
- El operador PIVOT sólo es limitado a usar una sóla funciónde agrado.


   WITH TE1 AS
   (
	   SELECT Stats.scores.studentid, testid, score FROM Stats.scores
   )
   SELECT studentid, [Test ABC],[Test XYZ]
   FROM TE1
   PIVOT (SUM(score) FOR testid IN ([Test ABC],[Test XYZ]) ) AS T;

RESULT:

studentid  Test ABC    Test XYZ
---------- ----------- -----------
Student A  95          95
Student B  80          80
Student C  55          55
Student D  55          55
Student E  50          50
Student F  80          80
Student G  95          95
Student H  65          65
Student I  75          75
Student J  NULL        95

(10 rows affected)


UNPIVOT = Invert of Pivot

Example:
-------
IF OBJECT_ID('TEMPPIVOT') IS NOT NULL  
	DROP TABLE TEMPPIVOT;

WITH TD1 AS
(
	SELECT custid, shipperid, freight FROM Sales.Orders
)
 SELECT * INTO TEMPPIVOT FROM TD1
 PIVOT (SUM(freight) FOR shipperid IN ( [1], [2], [3]) ) AS P;
--watching data of TemPIVOT
custid	1	2	3
1	95.03	61.02	69.53
2	43.90	NULL	53.52
3	63.09	116.56	88.87
4	41.95	358.54	71.46
5	189.44	1074.51	295.57
6	0.15	126.19	41.92
7	217.96	215.70	190.00
8	16.16	175.01	NULL
9	341.16	419.57	597.14
10	129.42	162.17	502.36
11	NULL	129.26	152.05
...

UNPIVOTING

 SELECT  custid, shipperid, freight FROM TEMPPIVOT
 UNPIVOT( freight  FOR shipperid IN ( [1], [2], [3]) ) AS P;

custid	shipperid	freight
1	1	95.03
1	2	61.02
1	3	69.53
2	1	43.90
2	3	53.52
3	1	63.09
3	2	116.56
3	3	88.87
4	1	41.95
...
87	1	236.96
87	2	399.58
87	3	185.94
88	1	117.63
88	2	29.49
88	3	47.59
89	1	102.80
89	2	180.10
89	3	1070.16
90	1	41.05
90	3	47.36
91	1	8.72
91	2	100.96
91	3	66.06
 
 

